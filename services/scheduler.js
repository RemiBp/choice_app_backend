const { exec } = require('child_process');
const cron = require('node-cron');

/**
 * Planifie l'ex√©cution du script generateProducers.js tous les 3 jours.
 */
cron.schedule('0 0 */3 * *', () => {
  console.log('üïí Ex√©cution planifi√©e : Mise √† jour des producteurs...');

  exec('node ./scripts/generateProducers.js', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution de generateProducers.js : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de generateProducers.js : ${stderr}`);
    }
    console.log(`‚úÖ Script generateProducers.js ex√©cut√© avec succ√®s :\n${stdout}`);
  });
});

/**
 * Planifie l'ex√©cution du script shotgunpro.py tous les jours √† 2h du matin.
 */
cron.schedule('0 2 * * *', () => {
  console.log('üöÄ Ex√©cution planifi√©e : Lancement de shotgunpro.py...');

  exec('python "C:/Users/remib/choice_app/backend/scripts/shotgunpro.py"', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution de shotgunpro.py : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de shotgunpro.py : ${stderr}`);
    }
    console.log(`‚úÖ Script shotgunpro.py ex√©cut√© avec succ√®s :\n${stdout}`);
  });
});

/**
 * Planifie l'ex√©cution du script shotgunproevent.py tous les jours √† 3h du matin.
 */
cron.schedule('0 3 * * *', () => {
  console.log('üöÄ Ex√©cution planifi√©e : Lancement de shotgunproevent.py...');

  exec('python "C:/Users/remib/choice_app/backend/scripts/shotgunproevent.py"', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution de shotgunproevent.py : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de shotgunproevent.py : ${stderr}`);
    }
    console.log(`‚úÖ Script shotgunproevent.py ex√©cut√© avec succ√®s :\n${stdout}`);
  });
});

/**
 * Fonction pour ex√©cuter manuellement les scripts (pour des tests ou un besoin imm√©diat).
 */
const runManualUpdate = () => {
  console.log('‚ñ∂Ô∏è Ex√©cution manuelle : Mise √† jour des producteurs et lancement des scripts Shotgun...');

  exec('node ./scripts/generateProducers.js', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution manuelle de generateProducers.js : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de generateProducers.js : ${stderr}`);
    }
    console.log(`‚úÖ Mise √† jour manuelle des producteurs ex√©cut√©e avec succ√®s :\n${stdout}`);
  });

  exec('python "C:/Users/remib/choice_app/backend/scripts/shotgunpro.py"', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution manuelle de shotgunpro.py : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de shotgunpro.py : ${stderr}`);
    }
    console.log(`‚úÖ Lancement manuel de shotgunpro.py ex√©cut√© avec succ√®s :\n${stdout}`);
  });

  exec('python "C:/Users/remib/choice_app/backend/scripts/shotgunproevent.py"', (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå Erreur lors de l'ex√©cution manuelle de shotgunproevent.py : ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è Avertissement de shotgunproevent.py : ${stderr}`);
    }
    console.log(`‚úÖ Lancement manuel de shotgunproevent.py ex√©cut√© avec succ√®s :\n${stdout}`);
  });
};

// Exporter la fonction manuelle pour des tests ou des d√©clenchements √† la demande
module.exports = { runManualUpdate };

console.log('‚è≥ Scheduler en attente de la prochaine ex√©cution...');
