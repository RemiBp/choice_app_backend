const mongoose = require('mongoose');

// Configuration pour la connexion locale
const LOCAL_MONGO_URI = 'mongodb://localhost:27017/';
const DB_NAME = 'choice_app'; // Nom de la base de donn√©es par d√©faut, vous pouvez le changer

async function testLocalMongoConnection() {
  try {
    // Tentative de connexion √† MongoDB en local
    console.log('üîÑ Tentative de connexion √† MongoDB en local...');
    await mongoose.connect(LOCAL_MONGO_URI + DB_NAME, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('‚úÖ Connexion r√©ussie √† MongoDB en local !');
    
    // Afficher la liste des collections
    const collections = await mongoose.connection.db.listCollections().toArray();
    console.log('üìÅ Collections disponibles dans la base de donn√©es :');
    collections.forEach(collection => {
      console.log(` - ${collection.name}`);
    });
    
    // Optionnel : Tester une requ√™te simple
    if (collections.length > 0) {
      const firstCollection = collections[0].name;
      console.log(`üîç Test de requ√™te sur la collection "${firstCollection}"...`);
      const documents = await mongoose.connection.db.collection(firstCollection).find({}).limit(3).toArray();
      console.log(`üìÑ ${documents.length} documents trouv√©s dans "${firstCollection}"`);
      if (documents.length > 0) {
        console.log('üìù Exemple de document :', JSON.stringify(documents[0], null, 2));
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur de connexion :', error.message);
    if (error.message.includes('ECONNREFUSED')) {
      console.error('\n‚ö†Ô∏è Impossible de se connecter √† MongoDB en local.');
      console.error('üìã V√©rifiez que :');
      console.error(' 1. MongoDB est install√© sur votre machine');
      console.error(' 2. Le service MongoDB est d√©marr√©');
      console.error(' 3. MongoDB √©coute sur le port par d√©faut (27017)');
      console.error('\nüìå Si vous utilisez MongoDB Compass, assurez-vous qu\'il est ouvert et connect√©.');
    }
  } finally {
    // Fermeture de la connexion
    await mongoose.connection.close();
    console.log('üîí Connexion ferm√©e');
  }
}

// Ex√©cution du test
testLocalMongoConnection();

/*
INSTRUCTIONS D'UTILISATION :

1. Assurez-vous que MongoDB est install√© localement sur votre machine
   - Vous pouvez t√©l√©charger MongoDB Community Edition sur: https://www.mongodb.com/try/download/community

2. V√©rifiez que le service MongoDB est d√©marr√©
   - Sur Windows : V√©rifiez dans les Services ou lancez "mongod" dans un terminal
   - Sur Mac/Linux : Utilisez "sudo systemctl status mongodb" ou √©quivalent

3. Ex√©cutez ce script avec Node.js :
   $ node test_local_mongodb.js

4. Si vous souhaitez vous connecter √† une autre base de donn√©es que "choice_app",
   modifiez la constante DB_NAME dans ce script.

5. Pour utiliser cette connexion locale dans votre application principale,
   vous devrez modifier la variable MONGO_URI dans votre fichier .env :
   MONGO_URI=mongodb://localhost:27017/choice_app
*/